# Generated by Django 4.0.1 on 2022-01-22 23:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import rideshare.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OwnerRide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destaddr', models.TextField(max_length=400, verbose_name='Destination Address')),
                ('arrivalTime', models.DateTimeField(verbose_name='Desired Arrival Time')),
                ('numPassengers', models.IntegerField(validators=[rideshare.models.validate_positive], verbose_name='Number of Passengers')),
                ('vehicleType', models.IntegerField(choices=[(0, 'Sedan'), (1, 'Coupe'), (2, 'Sports Car'), (3, 'Station Wagon'), (4, 'Convertible'), (5, 'Sport-Utility Vehicle'), (6, 'Minivan'), (7, 'Pickup Truck')], help_text='-Sedan: traditional trunks with four doors<br/>    -Coupe: trunks with two doors<br/>    -Sports Car: the sportiest, hottest, coolest-looking coupes<br/>    -Station Wagon: similar to sedans but have an extended roofline and a hatch door at the rear instead of a trunk<br/>    -Convertible: the roof can be retracted into the body<br/>    -Sport-Utility Vehicle(SUV): taller and boxier than sedans, offer an elevated seating position<br/>    -Minivan: spacial cars which have adjustable seats in their second and third rows<br/>    -Pickup Truck: have passenger cabs and open cargo beds in the rear', verbose_name='Desired Vehicle Type')),
                ('shareable', models.BooleanField(default=False, verbose_name='Do you want to share this ride with others?')),
                ('specialRequest', models.CharField(blank=True, max_length=200, verbose_name='Special requests about the vehicle you want (optional)')),
                ('confirmed', models.BooleanField(default=False, verbose_name='The is confirmed by a driver or not')),
                ('completed', models.BooleanField(default=False, verbose_name='This ride is completed or not')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User who request the ride')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicleType', models.IntegerField(choices=[(0, 'Sedan'), (1, 'Coupe'), (2, 'Sports Car'), (3, 'Station Wagon'), (4, 'Convertible'), (5, 'Sport-Utility Vehicle'), (6, 'Minivan'), (7, 'Pickup Truck')], help_text='-Sedan: traditional trunks with four doors<br/>    -Coupe: trunks with two doors<br/>    -Sports Car: the sportiest, hottest, coolest-looking coupes<br/>    -Station Wagon: similar to sedans but have an extended roofline and a hatch door at the rear instead of a trunk<br/>    -Convertible: the roof can be retracted into the body<br/>    -Sport-Utility Vehicle(SUV): taller and boxier than sedans, offer an elevated seating position<br/>    -Minivan: spacial cars which have adjustable seats in their second and third rows<br/>    -Pickup Truck: have passenger cabs and open cargo beds in the rear', verbose_name='Vehicle Type')),
                ('plateNum', models.CharField(max_length=20, verbose_name='License Plate Number')),
                ('maxCapacity', models.IntegerField(verbose_name='Maximum Number of Passengers')),
                ('specialInfo', models.CharField(blank=True, max_length=200, verbose_name='Special info about your vehicle (optional)')),
                ('driver', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Phone Number')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'female'), (1, 'male'), (2, 'prefer not to tell')], null=True, verbose_name='Gender')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SharerRide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numPassengers', models.IntegerField(validators=[rideshare.models.validate_positive], verbose_name='Number of Passengers')),
                ('ownerride', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rideshare.ownerride', verbose_name='The ride chosen to join')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='The user who requests the ride')),
            ],
        ),
        migrations.AddField(
            model_name='ownerride',
            name='vehicle',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='rideshare.vehicle', verbose_name='Vehicle & driver for this ride'),
        ),
    ]
